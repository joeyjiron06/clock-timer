{"version":3,"sources":["assets/facebook.svg","assets/github.svg","assets/twitter.svg","utils/timer.js","utils/time.js","components/time.js","components/timerInput.js","components/countdownTimer.js","utils/metrics.js","components/social.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Timer","totalMs","this","endMs","Date","now","onTick","onComplete","active","requestAnimationFrame","onFrame","remainingMs","pad","num","trim","array","createTimeFromText","text","string","maxLength","char","delta","length","filler","Array","fill","padFront","hours","minutes","seconds","styles","StyleSheet","create","timerText","fontSize","timerInputText","position","top","borderBottom","timerTextNumber","opacity","timerTextNumberFilled","timerTextUnit","marginRight","TimeTextGroup","values","unit","className","css","time","timerInputContainer","display","flexDirection","alignItems","height","width","backgroundColor","borderBottomFocused","timerInput","cursor","ALLOWED_KEYS","Set","onSubmit","onTextChanged","disabled","useState","isFocused","setIsFocused","event","preventDefault","type","pattern","onChange","onFocus","onBlur","onKeyPress","console","log","key","has","value","root","maxWidth","margin","padding","circleProgressBar","buttonContainer","justifyContent","getTimeLeft","millis","remain","Math","floor","split","createTimeFromMs","filter","n","join","audio","Audio","src","percentageLeft","setPercentageLeft","timer","setTimer","setText","startTimer","map","val","Number","textToMillis","stop","start","msRemaining","paused","play","gtag","event_category","Metrics","hasPreloaded","pause","currentTime","useEffect","classes","strokeWidth","buildStyles","strokeLinecap","pathColor","trailColor","inputText","target","onClick","timeLeft","primary","icon","transition","image","Icon","url","alt","href","rel","facebook","github","twitter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4caf215c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.7f5e5374.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.95f94fbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.e019822f.svg\";","export default class Timer {\n  constructor(totalMs) {\n    this.totalMs = totalMs;\n  }\n\n  remainingMs() {\n    return this.endMs - Date.now();\n  }\n\n  start(onTick, onComplete) {\n    this.endMs = Date.now() + this.totalMs;\n\n    let active = true;\n    const onFrame = () => {\n      if (!active) {\n        return;\n      }\n\n      const remainingMs = this.remainingMs();\n\n      if (remainingMs >= 0) {\n        onTick(remainingMs);\n        requestAnimationFrame(onFrame);\n      }\n\n      if (remainingMs <= 0) {\n        onComplete();\n      }\n    }\n\n    requestAnimationFrame(onFrame);\n\n    return () => {\n      active = false;\n    };\n  }\n}\n","\nfunction pad(num) {\n  return (num < 10 ? \"0\" : \"\") + num;\n}\n\nfunction padFront(string, maxLength, char) {\n  const delta = maxLength - string.length;\n  const filler = Array(delta).fill(char);\n  return [\n    ...filler,\n    ...string\n  ];\n}\n\nfunction trim(array) {\n  if (array[0] === '0') {\n    if (array[1] === '0') {\n      return [\n        null,\n        null\n      ]\n    }\n\n    return [\n      null,\n      array[1]\n    ];\n  }\n\n  return array;\n}\n\nexport function createTimeFromText(text) {\n  const [h1, h2, m1, m2, s1, s2] = padFront(text, 6, null);\n\n  return {\n    hours: [h1, h2],\n    minutes: [m1, m2],\n    seconds: [s1, s2],\n  };\n}\n\nexport function createTimeFromMs(millis) {\n  let remain = millis;\n\n  const hours = Math.floor(remain / (1000 * 60 * 60));\n  remain = remain % (1000 * 60 * 60);\n\n  const minutes = Math.floor(remain / (1000 * 60));\n  remain = remain % (1000 * 60);\n\n  const seconds = Math.floor(remain / 1000);\n  remain = remain % 1000;\n\n  return {\n    hours: trim(pad(hours).split(\"\")),\n    minutes: trim(pad(minutes).split(\"\")),\n    seconds: trim(pad(seconds).split(\"\"))\n  };\n}\n\nexport function textToMillis(text) {\n  const time = createTimeFromText(text);\n\n  let hours = time.hours.map(val => val || 0);\n  let minutes = time.minutes.map(val => val || 0);\n  let seconds = time.seconds.map(val => val || 0);\n\n  hours = Number(hours[0] + hours[1]) * 60 * 60 * 1000;\n  minutes = Number(minutes[0] + minutes[1]) * 60 * 1000;\n  seconds = Number(seconds[0] + seconds[1]) * 1000;\n\n  return hours + minutes + seconds;\n}","import React, { Fragment } from 'react';\nimport { StyleSheet, css } from 'aphrodite/no-important';\n\n\nconst styles = StyleSheet.create({\n  timerText: {\n    fontSize: 60,\n    '@media screen and (max-width: 360px)': {\n      fontSize: 48,\n    },\n    '@media screen and (max-width: 320px)': {\n      fontSize: 24,\n    }\n  },\n  timerInputText: {\n    position: 'absolute',\n    top: 0,\n    borderBottom: `solid 1px var(--color-grey)`\n  },\n  timerTextNumber: {\n    opacity: 0.5\n  },\n  timerTextNumberFilled: {\n    opacity: 1\n  },\n  timerTextUnit: {\n    fontSize: 30,\n    marginRight: 10,\n    '@media screen and (max-width: 320px)': {\n      fontSize: 12,\n    }\n  }\n});\n\n\nconst TimeTextGroup = ({ values, unit }) => (\n  <Fragment>\n    <span className={css(styles.timerTextNumber, values[0] !== null && styles.timerTextNumberFilled)}>\n      {values[0] || '0'}\n    </span>\n\n    <span className={css(styles.timerTextNumber, values[1] !== null && styles.timerTextNumberFilled)}>\n      {values[1] || '0'}\n    </span>\n\n    <span className={css(styles.timerTextNumber, values[1] !== null && styles.timerTextNumberFilled, styles.timerTextUnit)}>\n      {unit}\n    </span>\n  </Fragment>\n\n);\n\nexport default ({ time }) => (\n  <div className={css(styles.timerText)}>\n    <TimeTextGroup\n      values={time.hours}\n      unit='h'\n    />\n    <TimeTextGroup\n      values={time.minutes}\n      unit='m'\n    />\n    <TimeTextGroup\n      values={time.seconds}\n      unit='s'\n    />\n  </div>\n);","import React, { useState } from \"react\";\nimport { createTimeFromText } from \"../utils/time\";\nimport Time from './time';\nimport { StyleSheet, css } from 'aphrodite/no-important';\n\n\nconst styles = StyleSheet.create({\n  timerInputContainer: {\n    position: 'relative',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  borderBottom: {\n    height: 1,\n    width: '100%',\n    backgroundColor: 'var(--color-grey)'\n  },\n  borderBottomFocused: {\n    backgroundColor: 'var(--color-primary)'\n  },\n  timerInput: {\n    position: 'absolute',\n    opacity: 0,\n    width: 280,\n    height: 42,\n    cursor: 'pointer'\n  }\n});\n\nconst ALLOWED_KEYS = new Set([\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  'Enter'\n]);\n\n\nexport default ({ onSubmit, text, onTextChanged, disabled }) => {\n  const [isFocused, setIsFocused] = useState(false);\n\n\n  function onKeyPress(event) {\n    console.log('event.key', event.key);\n    if (!ALLOWED_KEYS.has(event.key)) {\n      event.preventDefault();\n    }\n  }\n\n  function onFocus() {\n    setIsFocused(true);\n  }\n\n  function onBlur() {\n    setIsFocused(false);\n  }\n\n  return (\n    <form\n      className={css(styles.timerInputContainer)}\n      onSubmit={event => {\n        event.preventDefault();\n        onSubmit();\n      }}\n    >\n      <Time time={createTimeFromText(text || '')} />\n\n      <div className={css(styles.borderBottom, isFocused && styles.borderBottomFocused)}>\n      </div>\n\n      <input\n        className={css(styles.timerInput)}\n        type=\"number\"\n        pattern=\"[0-9]*\"\n        disabled={disabled}\n        onChange={onTextChanged}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onKeyPress={onKeyPress}\n        value={text || ''}\n      />\n    </form>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { StyleSheet, css } from \"aphrodite/no-important\";\nimport Timer from \"../utils/timer\";\nimport { createTimeFromMs, textToMillis } from \"../utils/time\";\nimport TimerInput from './timerInput';\nimport * as Metrics from '../utils/metrics';\n\nconst styles = StyleSheet.create({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    maxWidth: 400,\n    margin: 'auto',\n    padding: 20\n  },\n  circleProgressBar: {\n    width: '100%',\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n})\n\nconst maxLength = 6;\n\n\nfunction getTimeLeft(millis) {\n  const time = createTimeFromMs(millis);\n\n  const left = [\n    ...time.hours,\n    ...time.minutes,\n    ...time.seconds,\n  ]\n    .filter(n => !!n)\n    .join('');\n\n  return left;\n}\n\nconst audio = new Audio();\naudio.src = 'bell.mp3';\n\nfunction playSound() {\n  if (!audio.paused) {\n    return;\n  }\n\n  audio.play();\n}\n\n// required for iOS devices. this is a workaround the restrictions that iOS puts on javascript\n// more reading here https://medium.com/@curtisrobinson/how-to-auto-play-audio-in-safari-with-javascript-21d50b0a2765\nfunction preloadSound() {\n  if (audio.hasPreloaded) {\n    return;\n  }\n\n  audio.play();\n  audio.pause();\n  audio.currentTime = 0;\n  audio.hasPreloaded = true;\n}\n\nexport default () => {\n  const [percentageLeft, setPercentageLeft] = useState(100);\n  const [timer, setTimer] = useState(null);\n  const [text, setText] = useState(null);\n\n  useEffect(() => {\n    return () => {\n      if (timer) {\n        timer.stop();\n        setTimer(null);\n        setText(null)\n      }\n    };\n  }, [timer]);\n\n  function onCancel() {\n    if (timer) {\n      Metrics.timerCancelled(timer.remainingMs());\n    }\n\n    setText(null)\n    setTimer(null);\n    setPercentageLeft(100);\n  }\n\n  function onTextChanged(event) {\n    const inputText = event.target.value;\n\n    if (inputText.length > maxLength) {\n      return;\n    }\n\n    if (inputText[0] === \"0\") {\n      return;\n    }\n\n\n    setText(inputText);\n  }\n\n  function startTimer() {\n    const millis = textToMillis(text);\n    const timer = new Timer(millis);\n\n    timer.stop = timer.start(msRemaining => {\n      setText(getTimeLeft(msRemaining));\n      setPercentageLeft(msRemaining / timer.totalMs * 100)\n    }, () => {\n      setTimer(null);\n      setPercentageLeft(0);\n      playSound();\n      Metrics.timerFinished(millis);\n    });\n\n    setTimer(timer);\n    Metrics.timerStarted(millis);\n  }\n\n  function onSubmit() {\n    if (!text || timer) {\n      return;\n    }\n\n    preloadSound();\n    startTimer();\n  }\n\n  return (\n    <div className={css(styles.root)}>\n      <CircularProgressbarWithChildren\n        classes={{\n          root: css(styles.circleProgressBar)\n        }}\n        value={percentageLeft}\n        strokeWidth={4}\n        styles={buildStyles({\n          strokeLinecap: 'round',\n          pathColor: 'var(--color-primary)',\n          trailColor: 'var(--color-grey)'\n        })}\n      >\n        <TimerInput\n          disabled={!!timer}\n          text={text}\n          onSubmit={onSubmit}\n          onTextChanged={onTextChanged}\n        />\n      </CircularProgressbarWithChildren>\n\n\n      <div className={css(styles.buttonContainer)}>\n        <button onClick={onCancel}>Cancel</button>\n        <button primary=\"true\" type=\"submit\" onClick={onSubmit}> Start</button>\n      </div>\n    </div >\n  );\n};\n","/* global gtag */\n\nexport function timerStarted(millis) {\n  if (!gtag) {\n    return;\n  }\n\n\n  gtag('event', 'start', {\n    event_category: 'timer',\n    value: millis\n  });\n}\n\nexport function timerCancelled(timeLeft) {\n  if (!gtag) {\n    return;\n  }\n\n  gtag('event', 'cancel', {\n    event_category: 'timer',\n    value: timeLeft\n  });\n}\n\nexport function timerFinished(millis) {\n  if (!gtag) {\n    return;\n  }\n\n  gtag('event', 'finished', {\n    event_category: 'timer',\n    value: millis\n  });\n}","import React from \"react\";\nimport { StyleSheet, css } from \"aphrodite/no-important\";\nimport facebook from '../assets/facebook.svg';\nimport github from '../assets/github.svg';\nimport twitter from '../assets/twitter.svg';\n\nconst styles = StyleSheet.create({\n  icon: {\n    display: 'inline-block',\n    width: 28,\n    height: 28,\n    opacity: 0.7,\n    marginRight: 20,\n    transition: 'all 250ms ease-in-out',\n    cursor: 'pointer',\n    ':hover': {\n      opacity: 1\n    }\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  }\n})\n\nfunction Icon({ src, url, alt }) {\n  return (\n    <a href={url} className={css(styles.icon)} target=\"_blank\" rel=\"noopener noreferrer\">\n      <img src={src} alt={alt} className={css(styles.image)} />\n    </a>\n  )\n}\n\n\nexport default () => (\n  <div>\n    <Icon\n      src={facebook}\n      url='https://www.facebook.com/joey.jiron'\n    />\n    <Icon\n      src={github}\n      url='https://github.com/joeyjiron06/clock-timer'\n    />\n    <Icon\n      src={twitter}\n      url='https://twitter.com/joeyjiron06'\n    />\n  </div>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport CountdownTimer from \"./components/countdownTimer\";\nimport Social from './components/social';\n\nimport \"./index.css\";\n\nexport default () => {\n  return (\n    <div className=\"App\">\n      <h1>Timer</h1>\n      <CountdownTimer />\n      <Social />\n    </div>\n  );\n}"],"sourceRoot":""}